#!/usr/bin/env bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Å—Ç—ã—Ö —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Ö NixOS

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() { echo -e "${BLUE}[INFO]${NC} $1"; }
log_success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
log_warning() { echo -e "${YELLOW}[WARNING]${NC} $1"; }
log_error() { echo -e "${RED}[ERROR]${NC} $1"; }

echo -e "${GREEN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${GREEN}‚ïë                  –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞                     ‚ïë${NC}"
echo -e "${GREEN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
echo

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–æ–±–æ–∫
fix_braces() {
    local file="$1"
    local description="$2"
    
    if [[ ! -f "$file" ]]; then
        log_warning "$description –Ω–µ –Ω–∞–π–¥–µ–Ω: $file"
        return 1
    fi
    
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫–æ–±–æ–∫ –≤ $description..."
    
    local open_braces=$(grep -o '{' "$file" | wc -l)
    local close_braces=$(grep -o '}' "$file" | wc -l)
    
    if [[ "$open_braces" -gt "$close_braces" ]]; then
        local missing=$((open_braces - close_braces))
        log_warning "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç $missing –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫ –≤ $file"
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
        cp "$file" "$file.backup-$(date +%Y%m%d-%H%M%S)"
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫
        for ((i=1; i<=missing; i++)); do
            echo "}" >> "$file"
        done
        
        log_success "–î–æ–±–∞–≤–ª–µ–Ω–æ $missing –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫ –≤ $file"
        return 0
    elif [[ "$close_braces" -gt "$open_braces" ]]; then
        local extra=$((close_braces - open_braces))
        log_error "–õ–∏—à–Ω–∏—Ö $extra –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫ –≤ $file"
        log_info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª –≤—Ä—É—á–Ω—É—é"
        return 1
    else
        log_success "–°–∫–æ–±–∫–∏ –≤ $description —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω—ã"
        return 0
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ—á–µ–∫ —Å –∑–∞–ø—è—Ç–æ–π
fix_semicolons() {
    local file="$1"
    local description="$2"
    
    if [[ ! -f "$file" ]]; then
        return 1
    fi
    
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ—á–µ–∫ —Å –∑–∞–ø—è—Ç–æ–π –≤ $description..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è —Ç–æ—á–∫–æ–π —Å –∑–∞–ø—è—Ç–æ–π
    local missing_semicolons=$(grep -n '[^;{}\s]$' "$file" | grep -v '^[[:space:]]*#' | grep -v '^[[:space:]]*$' | wc -l)
    
    if [[ "$missing_semicolons" -gt 0 ]]; then
        log_warning "–í–æ–∑–º–æ–∂–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–æ—á–∫–∏ —Å –∑–∞–ø—è—Ç–æ–π –≤ $file"
        log_info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä–æ–∫–∏ –≤—Ä—É—á–Ω—É—é"
    else
        log_success "–¢–æ—á–∫–∏ —Å –∑–∞–ø—è—Ç–æ–π –≤ $description –≤—ã–≥–ª—è–¥—è—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    fi
    
    return 0
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
fix_syntax_errors() {
    local files=(
        "configuration.nix:–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è NixOS"
        "hardware-configuration.nix:–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è"
    )
    
    for file_info in "${files[@]}"; do
        local file_path=$(echo "$file_info" | cut -d: -f1)
        local description=$(echo "$file_info" | cut -d: -f2)
        
        if [[ -f "$file_path" ]]; then
            echo
            log_info "=== –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ $description ==="
            fix_braces "$file_path" "$description"
            fix_semicolons "$file_path" "$description"
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
verify_fixes() {
    log_info "=== –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í ==="
    
    if [[ -f "configuration.nix" ]]; then
        log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ configuration.nix..."
        local open=$(grep -o '{' "configuration.nix" | wc -l)
        local close=$(grep -o '}' "configuration.nix" | wc -l)
        
        if [[ "$open" -eq "$close" ]]; then
            log_success "configuration.nix: —Å–∫–æ–±–∫–∏ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω—ã ($open:$close)"
        else
            log_error "configuration.nix: —Å–∫–æ–±–∫–∏ –Ω–µ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω—ã ($open:$close)"
        fi
    fi
    
    if [[ -f "hardware-configuration.nix" ]]; then
        log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ hardware-configuration.nix..."
        local open=$(grep -o '{' "hardware-configuration.nix" | wc -l)
        local close=$(grep -o '}' "hardware-configuration.nix" | wc -l)
        
        if [[ "$open" -eq "$close" ]]; then
            log_success "hardware-configuration.nix: —Å–∫–æ–±–∫–∏ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω—ã ($open:$close)"
        else
            log_error "hardware-configuration.nix: —Å–∫–æ–±–∫–∏ –Ω–µ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω—ã ($open:$close)"
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞
generate_report() {
    echo
    log_info "=== –û–¢–ß–ï–¢ –ò –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò ==="
    
    echo -e "${YELLOW}üìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:${NC}"
    echo "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–µ–Ω—ã –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã —Å–∫–æ–±–∫–∏ –≤ Nix —Ñ–∞–π–ª–∞—Ö"
    echo "‚Ä¢ –°–æ–∑–¥–∞–Ω—ã –±—ç–∫–∞–ø—ã –∏–∑–º–µ–Ω—ë–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
    echo "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–µ–Ω –±–∞–∑–æ–≤—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å"
    
    echo
    echo -e "${BLUE}üîß –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
    echo "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: sudo nixos-rebuild dry-build"
    echo "‚Ä¢ –ï—Å–ª–∏ –æ—à–∏–±–∫–∏ –æ—Å—Ç–∞–ª–∏—Å—å, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã –≤—Ä—É—á–Ω—É—é"
    echo "‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ ./diagnose-config.sh –¥–ª—è –ø–æ–ª–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"
    
    echo
    echo -e "${GREEN}‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ${NC}"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if [[ ! -f "configuration.nix" ]]; then
        log_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏"
        exit 1
    fi
    
    fix_syntax_errors
    echo
    verify_fixes
    generate_report
}

# –ó–∞–ø—É—Å–∫
main "$@"
